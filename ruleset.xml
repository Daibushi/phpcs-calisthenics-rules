<?xml version="1.0"?>
<ruleset name="ObjectCalisthenics">
    <description>Object Calisthenics coding standard.</description>

    <!-- Import PSR-2 coding standard (base) -->
    <rule ref="PSR2"/>

    <!-- Rule #1: Only one indentation level per function/method -->
    <rule ref="ObjectCalisthenics.Metrics.OneIndentationLevel"/>

    <!-- Rule #2: There is no "else" -->
    <rule ref="ObjectCalisthenics.ControlStructures.NoElse"/>

    <!-- Rule #3: Encapsulate all primitive types and strings -->
    <!-- Cannot be implemented, since it requires to be encapsulated ONLY if they have behavior -->

    <!-- Rule #4: Only one object operator (->) per line -->
    <rule ref="ObjectCalisthenics.CodeAnalysis.OneObjectOperatorPerLine"/>

    <!-- Rule #5: Do not abbreviate -->
    <!--rule ref="ObjectCalisthenics.NamingConventions.DoNotAbbreviate"/-->

    <!-- Rule #6: Keep your classes small -->
    <!-- 15 classes per namespace -->
    <!-- 200 LOC for interfaces, classes and traits -->
    <rule ref="ObjectCalisthenics.Files.InterfaceLength"/>
    <rule ref="ObjectCalisthenics.Files.ClassLength"/>
    <rule ref="ObjectCalisthenics.Files.TraitLength"/>
    <!-- 10 methods per class -->
    <!--rule ref="ObjectCalisthenics.Files.ClassMethodAmount"/-->
    <!-- 20 LOC for methods -->
    <rule ref="ObjectCalisthenics.Files.FunctionLength"/>

    <!-- Rule #7: Limit the number of object instances per class (2 to 5) -->

    <!-- Rule #8: Use first class Collections -->

    <!-- Rule #9: Use getters/setter -->

    <!-- Rule #10: Document your code -->
</ruleset>
